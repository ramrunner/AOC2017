(import bitwise-utils)
(import (chicken bitwise))
(import format)
(define todiv 2147483647)
(define fg1 16807)
(define fg2 48271)
(define todiv1 4)
(define todiv2 8)
(define mask16 (- (arithmetic-shift-left 1 16) 1))

(define (make-gen start fac div)
 (letrec ((cur start)
        (fact fac)
       (recur (lambda () (begin (set! cur (modulo (* cur fact) todiv)) (if (eq? (modulo cur div) 0) cur (recur))))))
  recur))

(define (judge sg1 sg2 hm)
  (letrec* ((lg1 (make-gen sg1 fg1 todiv1))
        (lg2 (make-gen sg2 fg2 todiv2))
        (runs hm)
        (matches 0)
        (lcomp (lambda (n1 n2)
                (let* ((sh1 (bitwise-and n1 mask16))
                       (sh2 (bitwise-and n2 mask16)))
                 ;(format #f " 1 o ~A s ~A bs ~B ilen ~A 2 o ~A s ~A bs ~B~%" n1 sh1 sh1 (integer-length sh1) n2 sh2 sh2)
                 (if (eq? sh1 sh2)
                   (set! matches (+ 1 matches))))))
                  
        (recur (lambda () (if (> runs 0) (begin (set! runs (- runs 1)) (lcomp (lg1) (lg2)) (recur))))))
  (recur)
  (format #t "total matches ~A~%" matches)))

(judge 783 325 5000000)
